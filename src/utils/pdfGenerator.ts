import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';
import { Project } from '../types';
import { formatCurrency } from './calculations';

export const generateQuotationPDF = async (project: Project): Promise<void> => {
  const pdf = new jsPDF();
  
  // Header
  pdf.setFontSize(20);
  pdf.setTextColor(41, 128, 185);
  pdf.text('SolarTech Solutions', 20, 30);
  
  pdf.setFontSize(12);
  pdf.setTextColor(0, 0, 0);
  pdf.text('Solar Installation Quotation', 20, 45);
  
  // Client Details
  pdf.setFontSize(14);
  pdf.text('Client Details:', 20, 65);
  
  pdf.setFontSize(10);
  pdf.text(`Name: ${project.personalDetails.name}`, 20, 80);
  pdf.text(`Phone: ${project.personalDetails.phone}`, 20, 90);
  pdf.text(`Email: ${project.personalDetails.email}`, 20, 100);
  pdf.text(`Address: ${project.personalDetails.address}`, 20, 110);
  
  // System Configuration
  pdf.setFontSize(14);
  pdf.text('System Configuration:', 20, 130);
  
  pdf.setFontSize(10);
  pdf.text(`Make: ${project.systemConfiguration.make}`, 20, 145);
  pdf.text(`Watt Peak: ${project.systemConfiguration.wattPeak}W`, 20, 155);
  pdf.text(`Number of Panels: ${project.systemConfiguration.numberOfPanels}`, 20, 165);
  pdf.text(`System Size: ${project.calculations.systemSize} kW`, 20, 175);
  
  // Pricing Breakdown
  pdf.setFontSize(14);
  pdf.text('Pricing Breakdown:', 20, 195);
  
  pdf.setFontSize(10);
  pdf.text(`Base Price: ${formatCurrency(project.calculations.totalBasePrice)}`, 20, 210);
  pdf.text(`GST (${project.systemConfiguration.gstPercentage}%): ${formatCurrency(project.calculations.gstAmount)}`, 20, 220);
  pdf.text(`Cleaning Charges: ${formatCurrency(project.systemConfiguration.cleaningCharges)}`, 20, 230);
  pdf.text(`Subsidy: -${formatCurrency(project.systemConfiguration.subsidy)}`, 20, 240);
  
  // Total
  pdf.setFontSize(12);
  pdf.setTextColor(41, 128, 185);
  pdf.text(`Total Payable Amount: ${formatCurrency(project.calculations.totalPayableAmount)}`, 20, 260);
  
  // Footer
  pdf.setFontSize(8);
  pdf.setTextColor(128, 128, 128);
  pdf.text('Generated by SolarTech Solutions Management System', 20, 280);
  pdf.text(`Generated on: ${new Date().toLocaleDateString()}`, 20, 290);
  
  pdf.save(`quotation_${project.personalDetails.name.replace(/\s+/g, '_')}_${new Date().toISOString().slice(0, 10)}.pdf`);
};

export const generateQuotationFromElement = async (elementId: string, filename: string): Promise<void> => {
  const element = document.getElementById(elementId);
  if (!element) return;
  
  const canvas = await html2canvas(element, {
    scale: 2,
    logging: false,
    useCORS: true,
  });
  
  const imgData = canvas.toDataURL('image/png');
  const pdf = new jsPDF();
  const imgWidth = 210;
  const pageHeight = 295;
  const imgHeight = (canvas.height * imgWidth) / canvas.width;
  let heightLeft = imgHeight;
  
  let position = 0;
  
  pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
  heightLeft -= pageHeight;
  
  while (heightLeft >= 0) {
    position = heightLeft - imgHeight;
    pdf.addPage();
    pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
    heightLeft -= pageHeight;
  }
  
  pdf.save(filename);
};